services:
  catcher:
    build:
      context: ../catcher
      dockerfile: ../catcher/Dockerfile.staging
    environment:
      CATCHER_OUTGOING_QUEUE_PASSWORD: ${CATCHER_OUTGOING_QUEUE_PASSWORD}
      CATCHER_OUTGOING_QUEUE_HOST: ${CATCHER_OUTGOING_QUEUE_HOST}
      CATCHER_HTTP_WEBHOOK_TOKEN: ${CATCHER_HTTP_WEBHOOK_TOKEN}
    depends_on:
      catcher-outgoing-queue:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../configs/catcher_config.staging.yml
        target: /app/config/config.yml
      - type: bind
        source: ../logs/catcher
        target: /app/app_logs
    ports:
      - "8080:8080"
    networks:
      - argus
  
  catcher-outgoing-queue:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: ${CATCHER_OUTGOING_QUEUE_PASSWORD}
    healthcheck:
        test: "rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running"
        interval: 5s
        timeout: 15s
        retries: 10
    networks:
      - argus

  deduplicator-stage-one:
    build:
      context: ../deduplicator
      dockerfile: ../deduplicator/Dockerfile.staging
    environment:
      STAGE_ONE_DEDUPLICATOR_INCOMING_QUEUE_HOST: ${CATCHER_OUTGOING_QUEUE_HOST}
      STAGE_ONE_DEDUPLICATOR_INCOMING_QUEUE_PASSWORD: ${CATCHER_OUTGOING_QUEUE_PASSWORD}
      STAGE_ONE_DEDUPLICATOR_REDIS_CACHE_HOST: ${STAGE_ONE_DEDUPLICATOR_REDIS_CACHE_HOST}
      STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_HOST: ${STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_HOST}
      STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD: ${STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
      DEDUPLICATOR_LOG_LEVEL: ${DEDUPLICATOR_LOG_LEVEL}
    volumes:
      - type: bind
        source: ../configs/deduplicator_stage_one_config.staging.yml
        target: /app/config/config.yml
      - type: bind
        source: ../logs/deduplicator_stage_one
        target: /app/app_logs
    depends_on:
      catcher-outgoing-queue:
        condition: service_healthy
      deduplicator-stage-one-outgoing-queue:
        condition: service_healthy
      deduplicator-stage-one-redis-cache:
        condition: service_healthy
    networks:
      - argus
  
  deduplicator-stage-one-outgoing-queue:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: ${STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
    healthcheck:
        test: "rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running"
        interval: 5s
        timeout: 15s
        retries: 10
    networks:
      - argus
  
  deduplicator-stage-one-redis-cache:
    image: redis:6
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 15s
      retries: 10
    networks:
      - argus
  

  deduplicator-stage-two:
    build:
      context: ../deduplicator
      dockerfile: ../deduplicator/Dockerfile.staging
    environment:
      STAGE_TWO_DEDUPLICATOR_INCOMING_QUEUE_HOST: ${STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_HOST}
      STAGE_TWO_DEDUPLICATOR_INCOMING_QUEUE_PASSWORD: ${STAGE_ONE_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
      STAGE_TWO_DEDUPLICATOR_REDIS_CACHE_HOST: ${STAGE_TWO_DEDUPLICATOR_REDIS_CACHE_HOST}
      STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_HOST: ${STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_HOST}
      STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD: ${STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
      DEDUPLICATOR_LOG_LEVEL: ${DEDUPLICATOR_LOG_LEVEL}
    volumes:
      - type: bind
        source: ../configs/deduplicator_stage_two_config.staging.yml
        target: /app/config/config.yml
      - type: bind
        source: ../logs/deduplicator_stage_two
        target: /app/app_logs
    depends_on:
      deduplicator-stage-one-outgoing-queue:
        condition: service_healthy
      deduplicator-stage-two-outgoing-queue:
        condition: service_healthy
      deduplicator-stage-two-redis-cache:
        condition: service_healthy
    networks:
      - argus
  
  deduplicator-stage-two-outgoing-queue:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: ${STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
    healthcheck:
        test: "rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running"
        interval: 5s
        timeout: 15s
        retries: 10
    networks:
      - argus
  
  deduplicator-stage-two-redis-cache:
    image: redis:6
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 15s
      retries: 10
    networks:
      - argus
  
  deduplicator-stage-three:
    build:
      context: ../deduplicator
      dockerfile: ../deduplicator/Dockerfile.staging
    environment:
      STAGE_THREE_DEDUPLICATOR_INCOMING_QUEUE_HOST: ${STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_HOST}
      STAGE_THREE_DEDUPLICATOR_INCOMING_QUEUE_PASSWORD: ${STAGE_TWO_DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD}
      STAGE_THREE_DEDUPLICATOR_REDIS_CACHE_HOST: ${STAGE_THREE_DEDUPLICATOR_REDIS_CACHE_HOST}
      STAGE_THREE_DEDUPLICATOR_OPENSEARCH_HOST: ${STAGE_THREE_DEDUPLICATOR_OPENSEARCH_HOST}
      STAGE_THREE_DEDUPLICATOR_OPENSEARCH_PASSWORD: ${STAGE_THREE_DEDUPLICATOR_OPENSEARCH_PASSWORD}
      DEDUPLICATOR_LOG_LEVEL: ${DEDUPLICATOR_LOG_LEVEL}
    volumes:
      - type: bind
        source: ../configs/deduplicator_stage_three_config.staging.yml
        target: /app/config/config.yml
      - type: bind
        source: ../logs/deduplicator_stage_three
        target: /app/app_logs
    depends_on:
      deduplicator-stage-two-outgoing-queue:
        condition: service_healthy
      deduplicator-stage-three-redis-cache:
        condition: service_healthy
      opensearch-node1:
        condition: service_healthy
    networks:
      - argus

  deduplicator-stage-three-redis-cache:
    image: redis:6
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 15s
      retries: 10
    networks:
      - argus
    
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      cluster.name: opensearch-cluster
      node.name: opensearch-node1
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_cluster_manager_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      plugins.security.ssl.http.enabled: false
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${STAGE_THREE_DEDUPLICATOR_OPENSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s -o /dev/null -w '%{http_code}' http://localhost:9200 | grep -q '200\\|401'"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - argus

  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      cluster.name: opensearch-cluster
      node.name: opensearch-node2
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_cluster_manager_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${STAGE_THREE_DEDUPLICATOR_OPENSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - argus

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Dashboards UI
    expose:
      - "5601"
    depends_on:
      opensearch-node1:
        condition: service_healthy
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]'
    networks:
      - argus


networks:
  argus:
    driver: bridge

volumes:
  opensearch-data1:
  opensearch-data2:
